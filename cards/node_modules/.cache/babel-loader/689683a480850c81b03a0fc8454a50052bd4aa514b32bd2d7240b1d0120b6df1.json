{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\julia\\\\OneDrive\\\\Documentos\\\\privado\\\\cards\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport PlayerForm from './PlayerForm';\nimport Game from './Game';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [player1Name, setPlayer1Name] = useState('');\n  const [player2Name, setPlayer2Name] = useState('');\n  const handleStartGame = navigate => {\n    // Aquí puedes realizar cualquier lógica adicional antes de comenzar el juego\n    // Por ejemplo, validar que se hayan ingresado los nombres de los jugadores\n    console.log('Comenzar juego');\n    navigate('/game');\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(PlayerForm, {\n          player1Name: player1Name,\n          player2Name: player2Name,\n          setPlayer1Name: setPlayer1Name,\n          setPlayer2Name: setPlayer2Name,\n          handleStartGame: handleStartGame\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/game\",\n        element: /*#__PURE__*/_jsxDEV(Game, {\n          player1Name: player1Name,\n          player2Name: player2Name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"UN3vGzP++WzJE1rp0gnEloXK/wU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","PlayerForm","Game","jsxDEV","_jsxDEV","App","_s","player1Name","setPlayer1Name","player2Name","setPlayer2Name","handleStartGame","navigate","console","log","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/julia/OneDrive/Documentos/privado/cards/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport PlayerForm from './PlayerForm';\nimport Game from './Game';\n\nconst App = () => {\n  const [player1Name, setPlayer1Name] = useState('');\n  const [player2Name, setPlayer2Name] = useState('');\n\n  const handleStartGame = (navigate) => {\n    // Aquí puedes realizar cualquier lógica adicional antes de comenzar el juego\n    // Por ejemplo, validar que se hayan ingresado los nombres de los jugadores\n    console.log('Comenzar juego');\n    navigate('/game');\n  };\n\n  return (\n    <Router>\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <PlayerForm\n              player1Name={player1Name}\n              player2Name={player2Name}\n              setPlayer1Name={setPlayer1Name}\n              setPlayer2Name={setPlayer2Name}\n              handleStartGame={handleStartGame}\n            />\n          }\n        />\n        <Route\n          path=\"/game\"\n          element={<Game player1Name={player1Name} player2Name={player2Name} />}\n        />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMe,eAAe,GAAIC,QAAQ,IAAK;IACpC;IACA;IACAC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7BF,QAAQ,CAAC,OAAO,CAAC;EACnB,CAAC;EAED,oBACER,OAAA,CAACN,MAAM;IAAAiB,QAAA,eACLX,OAAA,CAACL,MAAM;MAAAgB,QAAA,gBACLX,OAAA,CAACJ,KAAK;QACJgB,IAAI,EAAC,GAAG;QACRC,OAAO,eACLb,OAAA,CAACH,UAAU;UACTM,WAAW,EAAEA,WAAY;UACzBE,WAAW,EAAEA,WAAY;UACzBD,cAAc,EAAEA,cAAe;UAC/BE,cAAc,EAAEA,cAAe;UAC/BC,eAAe,EAAEA;QAAgB;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC;MACF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACFjB,OAAA,CAACJ,KAAK;QACJgB,IAAI,EAAC,OAAO;QACZC,OAAO,eAAEb,OAAA,CAACF,IAAI;UAACK,WAAW,EAAEA,WAAY;UAACE,WAAW,EAAEA;QAAY;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb,CAAC;AAACf,EAAA,CAjCID,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AAmCT,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}