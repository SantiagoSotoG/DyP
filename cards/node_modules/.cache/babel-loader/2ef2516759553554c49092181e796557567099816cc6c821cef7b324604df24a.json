{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\julia\\\\OneDrive\\\\Documentos\\\\privado\\\\cards\\\\src\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './Game.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const {\n    player1Name,\n    player2Name\n  } = useParams();\n  const navigate = useNavigate();\n  const [player1DeckId, setPlayer1DeckId] = useState('');\n  const [player2DeckId, setPlayer2DeckId] = useState('');\n  const [player1Cards, setPlayer1Cards] = useState([]);\n  const [player2Cards, setPlayer2Cards] = useState([]);\n  const [player1Sets, setPlayer1Sets] = useState([]);\n  const [player2Sets, setPlayer2Sets] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const player1DeckResponse = await axios.get('https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1');\n        const player2DeckResponse = await axios.get('https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1');\n        const player1DrawResponse = await axios.get(`https://deckofcardsapi.com/api/deck/${player1DeckResponse.data.deck_id}/draw/?count=10`);\n        const player2DrawResponse = await axios.get(`https://deckofcardsapi.com/api/deck/${player2DeckResponse.data.deck_id}/draw/?count=10`);\n        setPlayer1DeckId(player1DeckResponse.data.deck_id);\n        setPlayer2DeckId(player2DeckResponse.data.deck_id);\n        setPlayer1Cards(player1DrawResponse.data.cards);\n        setPlayer2Cards(player2DrawResponse.data.cards);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const organizeSets = (cards, setFunc) => {\n      // Lógica de organización de cartas\n    };\n    organizeSets(player1Cards, setPlayer1Sets);\n    organizeSets(player2Cards, setPlayer2Sets);\n  }, [player1Cards, player2Cards]);\n  const handleDrawCard = async () => {\n    try {\n      const player1DrawResponse = await axios.get(`https://deckofcardsapi.com/api/deck/${player1DeckId}/draw/?count=1`);\n      const player2DrawResponse = await axios.get(`https://deckofcardsapi.com/api/deck/${player2DeckId}/draw/?count=1`);\n      const newPlayer1Cards = [...player1Cards, ...player1DrawResponse.data.cards];\n      const newPlayer2Cards = [...player2Cards, ...player2DrawResponse.data.cards];\n      const updatedPlayer1Cards = analyzeAndDiscard(newPlayer1Cards);\n      const updatedPlayer2Cards = analyzeAndDiscard(newPlayer2Cards);\n      setPlayer1Cards(updatedPlayer1Cards);\n      setPlayer2Cards(updatedPlayer2Cards);\n      organizeSets(updatedPlayer1Cards, setPlayer1Sets);\n      organizeSets(updatedPlayer2Cards, setPlayer2Sets);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const analyzeAndDiscard = cards => {\n    // Analizar si la carta pedida puede completar una terna, cuarta o escalera\n    // y descartar una carta inútil si es posible\n\n    // Lógica de análisis y descarte de cartas\n\n    return cards; // Devolver las cartas actualizadas\n  };\n\n  const handleFinishGame = () => {\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: player1Name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Deck ID: \", player1DeckId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: player1Sets.map((set, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"set\",\n        children: set.map(card => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: card.image,\n          alt: `${card.value} of ${card.suit}`,\n          className: \"card\"\n        }, card.code, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this))\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: player2Name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Deck ID: \", player2DeckId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: player2Sets.map((set, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"set\",\n        children: set.map(card => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: card.image,\n          alt: `${card.value} of ${card.suit}`,\n          className: \"card\"\n        }, card.code, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this))\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDrawCard,\n      children: \"Pedir carta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFinishGame,\n      children: \"Terminar juego\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"Qh2GCxBVR4a1258dTcL4gl1+Szk=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useEffect","useState","axios","useParams","useNavigate","jsxDEV","_jsxDEV","Game","_s","player1Name","player2Name","navigate","player1DeckId","setPlayer1DeckId","player2DeckId","setPlayer2DeckId","player1Cards","setPlayer1Cards","player2Cards","setPlayer2Cards","player1Sets","setPlayer1Sets","player2Sets","setPlayer2Sets","fetchData","player1DeckResponse","get","player2DeckResponse","player1DrawResponse","data","deck_id","player2DrawResponse","cards","error","console","log","organizeSets","setFunc","handleDrawCard","newPlayer1Cards","newPlayer2Cards","updatedPlayer1Cards","analyzeAndDiscard","updatedPlayer2Cards","handleFinishGame","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","set","index","card","src","image","alt","value","suit","code","onClick","_c","$RefreshReg$"],"sources":["C:/Users/julia/OneDrive/Documentos/privado/cards/src/Game.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport './Game.css';\r\n\r\nconst Game = () => {\r\n  const { player1Name, player2Name } = useParams();\r\n  const navigate = useNavigate();\r\n  const [player1DeckId, setPlayer1DeckId] = useState('');\r\n  const [player2DeckId, setPlayer2DeckId] = useState('');\r\n  const [player1Cards, setPlayer1Cards] = useState([]);\r\n  const [player2Cards, setPlayer2Cards] = useState([]);\r\n  const [player1Sets, setPlayer1Sets] = useState([]);\r\n  const [player2Sets, setPlayer2Sets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const player1DeckResponse = await axios.get(\r\n          'https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1'\r\n        );\r\n        const player2DeckResponse = await axios.get(\r\n          'https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1'\r\n        );\r\n        const player1DrawResponse = await axios.get(\r\n          `https://deckofcardsapi.com/api/deck/${player1DeckResponse.data.deck_id}/draw/?count=10`\r\n        );\r\n        const player2DrawResponse = await axios.get(\r\n          `https://deckofcardsapi.com/api/deck/${player2DeckResponse.data.deck_id}/draw/?count=10`\r\n        );\r\n\r\n        setPlayer1DeckId(player1DeckResponse.data.deck_id);\r\n        setPlayer2DeckId(player2DeckResponse.data.deck_id);\r\n        setPlayer1Cards(player1DrawResponse.data.cards);\r\n        setPlayer2Cards(player2DrawResponse.data.cards);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const organizeSets = (cards, setFunc) => {\r\n      // Lógica de organización de cartas\r\n    };\r\n\r\n    organizeSets(player1Cards, setPlayer1Sets);\r\n    organizeSets(player2Cards, setPlayer2Sets);\r\n  }, [player1Cards, player2Cards]);\r\n\r\n  const handleDrawCard = async () => {\r\n    try {\r\n      const player1DrawResponse = await axios.get(\r\n        `https://deckofcardsapi.com/api/deck/${player1DeckId}/draw/?count=1`\r\n      );\r\n      const player2DrawResponse = await axios.get(\r\n        `https://deckofcardsapi.com/api/deck/${player2DeckId}/draw/?count=1`\r\n      );\r\n\r\n      const newPlayer1Cards = [...player1Cards, ...player1DrawResponse.data.cards];\r\n      const newPlayer2Cards = [...player2Cards, ...player2DrawResponse.data.cards];\r\n\r\n      const updatedPlayer1Cards = analyzeAndDiscard(newPlayer1Cards);\r\n      const updatedPlayer2Cards = analyzeAndDiscard(newPlayer2Cards);\r\n\r\n      setPlayer1Cards(updatedPlayer1Cards);\r\n      setPlayer2Cards(updatedPlayer2Cards);\r\n\r\n      organizeSets(updatedPlayer1Cards, setPlayer1Sets);\r\n      organizeSets(updatedPlayer2Cards, setPlayer2Sets);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const analyzeAndDiscard = (cards) => {\r\n    // Analizar si la carta pedida puede completar una terna, cuarta o escalera\r\n    // y descartar una carta inútil si es posible\r\n\r\n    // Lógica de análisis y descarte de cartas\r\n\r\n    return cards; // Devolver las cartas actualizadas\r\n  };\r\n\r\n  const handleFinishGame = () => {\r\n    navigate('/');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{player1Name}</h2>\r\n      <p>Deck ID: {player1DeckId}</p>\r\n      <div className=\"card-container\">\r\n        {player1Sets.map((set, index) => (\r\n          <div key={index} className=\"set\">\r\n            {set.map((card) => (\r\n              <img\r\n                key={card.code}\r\n                src={card.image}\r\n                alt={`${card.value} of ${card.suit}`}\r\n                className=\"card\"\r\n              />\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <h2>{player2Name}</h2>\r\n      <p>Deck ID: {player2DeckId}</p>\r\n      <div className=\"card-container\">\r\n        {player2Sets.map((set, index) => (\r\n          <div key={index} className=\"set\">\r\n            {set.map((card) => (\r\n              <img\r\n                key={card.code}\r\n                src={card.image}\r\n                alt={`${card.value} of ${card.suit}`}\r\n                className=\"card\"\r\n              />\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <button onClick={handleDrawCard}>Pedir carta</button>\r\n      <button onClick={handleFinishGame}>Terminar juego</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}