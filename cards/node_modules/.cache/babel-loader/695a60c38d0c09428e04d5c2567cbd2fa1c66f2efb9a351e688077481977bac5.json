{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\julia\\\\OneDrive\\\\Documentos\\\\privado\\\\cards\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport PlayerForm from './PlayerForm';\nimport Game from './Game';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [player1Name, setPlayer1Name] = useState('');\n  const [player2Name, setPlayer2Name] = useState('');\n  const handleStartGame = navigate => {\n    // Aquí puedes realizar cualquier lógica adicional antes de comenzar el juego\n    // Por ejemplo, validar que se hayan ingresado los nombres de los jugadores\n    console.log('Comenzar juego');\n    navigate('/game');\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      render: _ref => {\n        let {\n          navigate\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(PlayerForm, {\n          player1Name: player1Name,\n          player2Name: player2Name,\n          setPlayer1Name: setPlayer1Name,\n          setPlayer2Name: setPlayer2Name,\n          handleStartGame: () => handleStartGame(navigate)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/game\",\n      render: () => /*#__PURE__*/_jsxDEV(Game, {\n        player1Name: player1Name,\n        player2Name: player2Name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"UN3vGzP++WzJE1rp0gnEloXK/wU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","PlayerForm","Game","jsxDEV","_jsxDEV","App","_s","player1Name","setPlayer1Name","player2Name","setPlayer2Name","handleStartGame","navigate","console","log","children","exact","path","render","_ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/julia/OneDrive/Documentos/privado/cards/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport PlayerForm from './PlayerForm';\nimport Game from './Game';\n\nconst App = () => {\n  const [player1Name, setPlayer1Name] = useState('');\n  const [player2Name, setPlayer2Name] = useState('');\n\n  const handleStartGame = (navigate) => {\n    // Aquí puedes realizar cualquier lógica adicional antes de comenzar el juego\n    // Por ejemplo, validar que se hayan ingresado los nombres de los jugadores\n    console.log('Comenzar juego');\n    navigate('/game');\n  };\n\n  return (\n    <Router>\n      <Route\n        exact\n        path=\"/\"\n        render={({ navigate }) => (\n          <PlayerForm\n            player1Name={player1Name}\n            player2Name={player2Name}\n            setPlayer1Name={setPlayer1Name}\n            setPlayer2Name={setPlayer2Name}\n            handleStartGame={() => handleStartGame(navigate)}\n          />\n        )}\n      />\n      <Route\n        path=\"/game\"\n        render={() => <Game player1Name={player1Name} player2Name={player2Name} />}\n      />\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACjE,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMc,eAAe,GAAIC,QAAQ,IAAK;IACpC;IACA;IACAC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7BF,QAAQ,CAAC,OAAO,CAAC;EACnB,CAAC;EAED,oBACER,OAAA,CAACL,MAAM;IAAAgB,QAAA,gBACLX,OAAA,CAACJ,KAAK;MACJgB,KAAK;MACLC,IAAI,EAAC,GAAG;MACRC,MAAM,EAAEC,IAAA;QAAA,IAAC;UAAEP;QAAS,CAAC,GAAAO,IAAA;QAAA,oBACnBf,OAAA,CAACH,UAAU;UACTM,WAAW,EAAEA,WAAY;UACzBE,WAAW,EAAEA,WAAY;UACzBD,cAAc,EAAEA,cAAe;UAC/BE,cAAc,EAAEA,cAAe;UAC/BC,eAAe,EAAEA,CAAA,KAAMA,eAAe,CAACC,QAAQ;QAAE;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC;MAAA;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACFnB,OAAA,CAACJ,KAAK;MACJiB,IAAI,EAAC,OAAO;MACZC,MAAM,EAAEA,CAAA,kBAAMd,OAAA,CAACF,IAAI;QAACK,WAAW,EAAEA,WAAY;QAACE,WAAW,EAAEA;MAAY;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5E,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEb,CAAC;AAACjB,EAAA,CAhCID,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAkCT,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}